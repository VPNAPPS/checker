# .github/workflows/proxy-tester.yml
name: Run Go Proxy Tester
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Runs the workflow every day at midnight UTC
  schedule:
    - cron: '0/30 * * * *'
permissions:
  contents: write
  actions: read
  
jobs:
  test-proxies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # Specify your Go version
      - name: Download GeoLite2 Country Database
        run: |
          # This URL is a mirror. For official downloads, you may need a MaxMind license key.
          curl -L -o GeoLite2-Country.mmdb "https://git.io/GeoLite2-Country.mmdb"
        
      - name: Install Go dependencies
        run: |
          go mod init proxy-tester || true # Initialize go.mod if it doesn't exist
          go get github.com/naser-989/xray-knife/v3/pkg
          go get github.com/naser-989/xray-knife/v3/pkg/singbox
          go get github.com/naser-989/xray-knife/v3/pkg/xray
          go get github.com/oschwald/geoip2-golang
          go mod tidy
      - name: Run the proxy tester script
        env:
          SUB_URLS: ${{ secrets.SUB_URLS }}
        run: |
          # Convert newline-separated URLs to comma-separated format
          URLS_COMMA_SEPARATED=$(echo "$SUB_URLS" | tr '\n' ',' | sed 's/,$//')
          echo "Using URLs: $URLS_COMMA_SEPARATED"
          go run . -urls "$URLS_COMMA_SEPARATED" -output "configs.txt" -concurrency 1000
      
      - name: Extract raw configs
        run: |
          # Create configs-raw.txt with only the configuration strings
          if [ -f "configs.txt" ]; then
            grep -o 'Config: [^,]*' configs.txt | sed 's/Config: //' > configs-raw.txt
            echo "Extracted $(wc -l < configs-raw.txt) configurations to configs-raw.txt"
            echo "Sample of extracted configs:"
            head -3 configs-raw.txt
          else
            echo "configs.txt not found!"
            exit 1
          fi
      
      - name: Upload results as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: proxy-profiles
          path: |
            configs.txt
            configs-raw.txt
      
      - name: Commit and push updated configs
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions@github.com"
          git add configs.txt configs-raw.txt
          # Check if there are any changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Automated update of config files - $(date '+%Y-%m-%d %H:%M:%S UTC')"
            git push origin HEAD:main
          fi
